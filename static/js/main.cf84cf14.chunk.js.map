{"version":3,"sources":["assets/gear.svg","components/TodoAddToggleExtendButton/TodoAddToggleExtendButton.js","constants.js","utils/index.js","components/TodoAddInput/TodoAddInput.js","actions/todosActions.js","actions/types.js","actions/todoFilterFormActions.js","components/TodoAddForm/TodoAddForm.js","actions/todoAddFormActions.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoFilterForm/TodoFilterForm.js","components/Todo/Todo.js","components/App/App.js","serviceWorker.js","reducers/todosReducer.js","reducers/todoAddFormReducer.js","reducers/todoFilterFormReducer.js","reducers/index.js","store.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","TodoAddToggleExtendButton","toggleExtendForm","className","type","onClick","MONTHS","getFormattedDate","myDate","date","Date","getDate","month","getMonth","hours","getHours","minutes","getMinutes","isValidDate","TodoAddInput","str","name","value","updateFormValue","handleChange","onChange","required","placeholder","split","map","word","char","index","toUpperCase","join","displayItemsByImportance","dispatch","payload","updateFilterFormValue","actions","addItem","todo","connect","todoAddForm","description","importance","dateExpires","isExtended","autoComplete","onSubmit","e","preventDefault","id","Math","random","dateAdded","parse","status","isHidden","TodoItem","dateCompleted","deleteItem","setItemProp","extraClassName","detectItemsFailure","todos","useEffect","interval","setInterval","clearInterval","localStorage","setItem","JSON","stringify","items","todoFilterForm","Todo","App","Boolean","window","location","hostname","match","initialState","getItem","todosReducer","state","action","filter","item","getTime","TodoAddFormReducer","todoFilterFormReducer","rootReducer","combineReducers","todoAddFormReducer","middleware","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+ZAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAEJ,IAAMC,cAAc,OAAQ,CAC1BC,EAAG,g9DAGD,EAAU,SAAiBC,GAC7B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQf,EAAyBY,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAOxB,EAAS,CACzC8B,QAAS,cACTC,IAAKJ,GACJE,GAAQD,EAAQ,IAAMJ,cAAc,QAAS,KAAMI,GAAS,KAAML,IAGnES,EAAa,IAAMC,YAAW,SAAUJ,EAAOE,GACjD,OAAO,IAAMP,cAAc,EAASxB,EAAS,CAC3C2B,OAAQI,GACPF,OCbUK,GDeA,ICzBmB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACnC,OACE,4BACEC,UAAU,gCACVC,KAAK,SACLC,QAASH,GACV,kBAAC,EAAD,SCXQI,G,MAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QCEvFC,EAAmB,SAACC,GAG/B,IAAMC,GAFND,EAAS,IAAIE,KAAK,GAAKF,IAEHG,UACdC,EAAQN,EAAOE,EAAOK,YACtBC,EAAQN,EAAOO,WACfC,EAAUR,EAAOS,aAEvB,MAAM,GAAN,OAAUR,EAAV,YAAkBG,EAAlB,YAA2BE,EAA3B,YAAoCE,IAGzBE,EAAc,SAACV,GAAD,OAAYA,GAAU,GAAKA,IAAW,gBC2BlDW,EAjCM,SAAC,GAAsC,IDQjCC,ECRHC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAC7BC,EAAe,SAAC,GAAgC,IAAD,IAA7BtD,OAAUmD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MACtCC,EAAgBF,EAAMC,IAGxB,OAAQD,GACN,IAAK,aACH,OACE,4BACElB,UAAU,wCACVkB,KAAMA,EACNI,SAAUD,GAEV,4BAAQF,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,iBAAd,kBAGN,QACE,OACE,2BACEnB,UAAW,kBAA6B,gBAATkB,EAAyB,wBAA0B,IAClFK,SAAmB,UAATL,EACVjB,KAAe,gBAATiB,EAAyB,iBAAmB,OAClDM,aDhBiBP,ECgBOC,EDhBCD,EAAIQ,MAAM,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKF,MAAM,IAAIC,KAAI,SAACE,EAAMC,GAAP,OAA2B,IAAVA,EAAcD,EAAKE,cAAgBF,KAAMG,KAAK,OAAKA,KAAK,MCiBhJb,KAAMA,EACNC,MAAOA,EACPG,SAAUD,MCdPW,EAA2B,SAACb,GAAD,OAAW,SAAAc,GACjDA,EAAS,CACPhC,KCjBuC,8BDkBvCiC,QAAS,CACPf,aEtBOgB,EAAwB,SAAChB,GAAD,OAAW,SAAAc,GAC9CA,EAAS,CACPhC,KDEoC,2BCDpCiC,QAAS,CACPf,aCyDAiB,EAAU,CACdhB,gBC9D6B,SAACF,EAAMC,GAAP,OAAiB,SAAAc,GAC9CA,EAAS,CACPhC,KHJ6B,oBGK7BiC,QAAS,CACPhB,OACAC,aD0DJgB,wBACAH,2BACAjC,iBCvD8B,kBAAM,SAAAkC,GACpCA,EAAS,CACPhC,KHb8B,yBEmEhCoC,QHlEqB,SAACC,GAAD,OAAU,SAAAL,GAC/BA,EAAS,CACPhC,KCFoB,WDGpBiC,QAAS,CACPI,aGiESC,eAhBS,SAAC,GAAD,QAAGC,YAAH,MAAmF,CACzGhD,MADsB,EAAkBA,MAExCiD,YAFsB,EAAyBA,YAG/CC,WAHsB,EAAsCA,WAI5DC,YAJsB,EAAkDA,YAKxEC,WALsB,EAA+DA,cAgB/CR,EAAzBG,EAnDK,SAAC,GAA8J,IAA5J/C,EAA2J,EAA3JA,MAAOiD,EAAoJ,EAApJA,YAAaC,EAAuI,EAAvIA,WAAYC,EAA2H,EAA3HA,YAAavB,EAA8G,EAA9GA,gBAAiBe,EAA6F,EAA7FA,sBAAuBH,EAAsE,EAAtEA,yBAA0BY,EAA4C,EAA5CA,WAAY7C,EAAgC,EAAhCA,iBAAkBsC,EAAc,EAAdA,QAuBlK,OACE,0BAAMrC,UAAU,gBAAgB6C,aAAa,MAAMC,SAvBhC,SAACC,GACpBA,EAAEC,iBAEFX,EAAQ,CACNY,GAAIC,KAAKC,SACT3D,QACAiD,cACAC,aACAU,UAAW,IAAI7C,KACfoC,YAAa,IAAIpC,KAAKA,KAAK8C,MAAMV,IACjCW,OAAQ,SACRC,UAAU,IAGZnC,EAAgB,QAAS,IACzBA,EAAgB,cAAe,IAC/BA,EAAgB,cAAe,IAE/Be,EAAsB,OACtBH,EAAyB,SAKvB,kBAAC,EAAD,CAA2BY,WAAYA,EAAY7C,iBAAkBA,IACrE,kBAAC,EAAD,CAAcmB,KAAK,QAAQC,MAAO3B,EAAO4B,gBAAiBA,IACzDwB,GAAc,kBAAC,EAAD,CAAc1B,KAAK,cAAcC,MAAOsB,EAAarB,gBAAiBA,IACpFwB,GAAc,kBAAC,EAAD,CAAc1B,KAAK,aAAaE,gBAAiBA,IAC/DwB,GAAc,kBAAC,EAAD,CAAc1B,KAAK,cAAcC,MAAOwB,EAAavB,gBAAiBA,IACrF,4BAAQpB,UAAU,yBAAlB,SESSwD,G,YAnDE,SAAC,GAA6H,IAAD,IAA1HlB,KAAQW,EAAkH,EAAlHA,GAAIzD,EAA8G,EAA9GA,MAAOiD,EAAuG,EAAvGA,YAAaW,EAA0F,EAA1FA,UAAWT,EAA+E,EAA/EA,YAAac,EAAkE,EAAlEA,cAAeH,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,SAAYG,EAA+B,EAA/BA,WAAaC,EAAkB,EAAlBA,YACpHC,EAAiBL,EAAW,qBAAkC,cAAXD,EAAyB,wBAAqC,WAAXA,EAAsB,qBAAuB,GAWzJ,OACE,wBAAItD,UAAW,YAAc4D,GAC3B,4BACE5D,UAAU,8CACVE,QAb0B,WAE5ByD,EAAYV,EAAI,gBADH,cAAXK,EAC+B,KAEA,IAAI/C,MAEvCoD,EAAYV,EAAI,SAAqB,WAAXK,EAAsB,YAAyB,cAAXA,EAAyB,SAAW,eAKhG,UAIA,yBAAKtD,UAAU,mBACb,2BACEA,UAAU,mBACV6C,aAAa,MACb5C,KAAK,OACLiB,KAAK,QACLC,MAAO3B,EACP8B,SAAU,oBAAGvD,OAAUmD,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAnB,OAAgCwC,EAAYV,EAAI/B,EAAMC,MAEjEsB,GACC,2BACEzC,UAAU,yBACV6C,aAAa,MACb5C,KAAK,OACLiB,KAAK,cACLC,MAAOsB,EACPnB,SAAU,oBAAGvD,OAAUmD,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAnB,OAAgCwC,EAAYV,EAAI/B,EAAMC,OAItE,wBAAInB,UAAU,oBACZ,wBAAIA,UAAU,mBAAd,UAAwCI,EAAiBgD,IACxDrC,EAAY4B,IAAgB,wBAAI3C,UAAU,mBAAd,YAA0CI,EAAiBuC,IACvFc,GAAiB,wBAAIzD,UAAU,mBAAd,cAA4CI,EAAiBqD,KAEjF,4BACEzD,UAAU,8CACVE,QAAS,kBAAMwD,EAAWT,KAF5B,WCLAb,EAAU,CACdsB,WNpCwB,SAACT,GAAD,OAAQ,SAAAhB,GAChCA,EAAS,CACPhC,KCVuB,cDWvBiC,QAAS,CACPe,UMiCJY,mBNnBgC,kBAAM,SAAA5B,GACtCA,EAAS,CACPhC,KC3BgC,2BK6ClC0D,YNdyB,SAACV,EAAI7E,EAAK+C,GAAV,OAAoB,SAAAc,GAC7CA,EAAS,CACPhC,KC9ByB,gBD+BzBiC,QAAS,CACPe,KACA7E,MACA+C,cMWSoB,eAVS,SAAC,GAAD,MAAgB,CACtCuB,MADsB,EAAGA,SAUa1B,EAAzBG,EAxCE,SAAC,GAA4D,IAA1DuB,EAAyD,EAAzDA,MAAOJ,EAAkD,EAAlDA,WAAYG,EAAsC,EAAtCA,mBAAoBF,EAAkB,EAAlBA,YACzDI,qBAAU,WACRF,IACA,IAAMG,EAAWC,aAAY,WAC3BJ,MACC,MACH,OAAO,kBAAMK,cAAcF,MAC1B,CAACH,IAEJE,qBAAU,WACRI,aAAaC,QAAQ,QAASC,KAAKC,UAAUR,MAC5C,CAACA,IAEJ,IAAMS,EAAQT,EAAMpC,KAAI,SAACY,EAAMT,GAAP,OACtB,kBAAC,EAAD,CACEzD,IAAKyD,EACLS,KAAMA,EACNoB,WAAYA,EACZG,mBAAoBA,EACpBF,YAAaA,OAIjB,OACE,wBAAI3D,UAAU,aACXuE,MCKDnC,G,MAAU,CACdJ,2BACAG,0BAGaI,eATS,SAAC,GAAD,MAAoC,CAC1DpB,MADsB,EAAGqD,eAAkBrD,SASLiB,EAAzBG,EApCQ,SAAC,GAAgE,IAA9DpB,EAA6D,EAA7DA,MAAOgB,EAAsD,EAAtDA,sBAAuBH,EAA+B,EAA/BA,yBACtD+B,qBAAU,WACR/B,EAAyBb,KACxB,CAACa,EAA0Bb,IAO9B,OACE,0BAAMnB,UAAU,oBACd,wBAAIA,UAAU,2BAAd,QACA,4BACEA,UAAU,2BACVmB,MAAOA,EACPG,SAXe,SAAC,GAAyB,IAAbH,EAAY,EAAtBpD,OAAUoD,MAChCgB,EAAsBhB,GACtBa,EAAyBb,KAWrB,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,iBAAd,sBCfOsD,EAVF,WACX,OACE,yBAAKzE,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAS0E,G,MARH,WACV,OACE,yBAAK1E,UAAU,OACb,kBAAC,EAAD,SCKc2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yCCfAC,EAAeX,KAAKhB,MAAMc,aAAac,QAAQ,WAAa,GAyBnDC,EAvBM,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7CnF,EAASmF,EAATnF,KAD6C,EAEpBmF,EAAOlD,QAAUkD,EAAOlD,QAAUkD,EAA3D9C,EAF6C,EAE7CA,KAAMW,EAFuC,EAEvCA,GAAI7E,EAFmC,EAEnCA,IAAK+C,EAF8B,EAE9BA,MAEvB,OAAQlB,GACN,IVRoB,WUSlB,MAAM,GAAN,mBACKkF,GADL,CAEE7C,IAEJ,IVZuB,cUarB,OAAO6C,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKrC,KAAOA,KAC1C,IVZuC,8BUarC,MAAiB,QAAV9B,EAAkBgE,EAAMzD,KAAI,SAAA4D,GAAI,sBAASA,EAAT,CAAe/B,UAAU,OAAW4B,EAAMzD,KAAI,SAAA4D,GAAI,OAAIA,EAAK5C,aAAevB,EAApB,eAAgCmE,EAAhC,CAAsC/B,UAAU,IAAhD,eAA6D+B,EAA7D,CAAmE/B,UAAU,OAC5K,IVfgC,uBUgB9B,OAAO4B,EAAMzD,KAAI,SAAA4D,GAAI,MAAoB,WAAhBA,EAAKhC,QAAuBvC,EAAYuE,EAAK3C,cAAgB,IAAIpC,KAAK+E,EAAK3C,aAAa4C,WAAa,IAAIhF,KAAK+E,EAAKlC,WAAWmC,UAA9H,eAA8ID,EAA9I,CAAoJhC,OAAQ,WAAYgC,KACnM,IVdyB,gBUevB,OAAOH,EAAMzD,KAAI,SAAA4D,GAAI,OAAIA,EAAKrC,KAAOA,EAAZ,eAAqBqC,EAArB,eAA4BlH,EAAM+C,IAASmE,KACtE,QACE,OAAOH,ICtBPH,EAAe,CACnBxF,MAAO,GACPiD,YAAa,GACbC,WAAY,YACZU,UAAW,GACXT,YAAa,GACbC,YAAY,GAuBC4C,EApBY,WAAmC,IAAlCL,EAAiC,uDAAzBH,EAAcI,EAAW,uCACnDnF,EAASmF,EAATnF,KADmD,EAEnCmF,EAAOlD,QAAUkD,EAAOlD,QAAUkD,EAAlDlE,EAFmD,EAEnDA,KAAMC,EAF6C,EAE7CA,MAEd,OAAQlB,GACN,IXhB6B,oBWiB3B,OAAO,eACFkF,EADL,eAEGjE,EAAOC,IAEZ,IXpB8B,qBWqB5B,OAAO,eACFgE,EADL,CAEEvC,YAAauC,EAAMvC,aAEvB,QACE,OAAOuC,ICzBPH,EAAe,CACnB7D,MAAO,OAkBMsE,EAfe,WAAmC,IAAlCN,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtDnF,EAASmF,EAATnF,KADsD,EAE5CmF,EAAOlD,QAAUkD,EAAOlD,QAAUkD,EAA5CjE,EAFsD,EAEtDA,MAER,OAAQlB,GACN,IZLoC,2BYMlC,OAAO,eACFkF,EADL,CAEEhE,MAAOA,IAEX,QACE,OAAOgE,ICLEO,EANKC,YAAgB,CAClC7B,MAAOoB,EACP1C,YAAaoD,EACbpB,eAAgBiB,ICFZI,EAAa,CAACC,KAcLC,EAZDC,YACZN,EALmB,GAOnBO,YACEC,IAAe,WAAf,EAAmBL,KCLvBM,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SNuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cf84cf14.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m499.953125 197.703125-39.351563-8.554687c-3.421874-10.476563-7.660156-20.695313-12.664062-30.539063l21.785156-33.886719c3.890625-6.054687 3.035156-14.003906-2.050781-19.089844l-61.304687-61.304687c-5.085938-5.085937-13.035157-5.941406-19.089844-2.050781l-33.886719 21.785156c-9.84375-5.003906-20.0625-9.242188-30.539063-12.664062l-8.554687-39.351563c-1.527344-7.03125-7.753906-12.046875-14.949219-12.046875h-86.695312c-7.195313 0-13.421875 5.015625-14.949219 12.046875l-8.554687 39.351563c-10.476563 3.421874-20.695313 7.660156-30.539063 12.664062l-33.886719-21.785156c-6.054687-3.890625-14.003906-3.035156-19.089844 2.050781l-61.304687 61.304687c-5.085937 5.085938-5.941406 13.035157-2.050781 19.089844l21.785156 33.886719c-5.003906 9.84375-9.242188 20.0625-12.664062 30.539063l-39.351563 8.554687c-7.03125 1.53125-12.046875 7.753906-12.046875 14.949219v86.695312c0 7.195313 5.015625 13.417969 12.046875 14.949219l39.351563 8.554687c3.421874 10.476563 7.660156 20.695313 12.664062 30.539063l-21.785156 33.886719c-3.890625 6.054687-3.035156 14.003906 2.050781 19.089844l61.304687 61.304687c5.085938 5.085937 13.035157 5.941406 19.089844 2.050781l33.886719-21.785156c9.84375 5.003906 20.0625 9.242188 30.539063 12.664062l8.554687 39.351563c1.527344 7.03125 7.753906 12.046875 14.949219 12.046875h86.695312c7.195313 0 13.421875-5.015625 14.949219-12.046875l8.554687-39.351563c10.476563-3.421874 20.695313-7.660156 30.539063-12.664062l33.886719 21.785156c6.054687 3.890625 14.003906 3.039063 19.089844-2.050781l61.304687-61.304687c5.085937-5.085938 5.941406-13.035157 2.050781-19.089844l-21.785156-33.886719c5.003906-9.84375 9.242188-20.0625 12.664062-30.539063l39.351563-8.554687c7.03125-1.53125 12.046875-7.753906 12.046875-14.949219v-86.695312c0-7.195313-5.015625-13.417969-12.046875-14.949219zm-152.160156 58.296875c0 50.613281-41.179688 91.792969-91.792969 91.792969s-91.792969-41.179688-91.792969-91.792969 41.179688-91.792969 91.792969-91.792969 91.792969 41.179688 91.792969 91.792969zm0 0\"\n});\n\nvar SvgGear = function SvgGear(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGear, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/gear.7d9f866a.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport './TodoAddToggleExtendButton.scss'\r\n\r\nimport { ReactComponent as Gear } from '../../assets/gear.svg'\r\n\r\nconst TodoAddToggleExtendButton = ({ toggleExtendForm }) => {\r\n  return (\r\n    <button \r\n      className=\"todo-add-toggle-extend-button\"\r\n      type=\"button\"\r\n      onClick={toggleExtendForm}\r\n    ><Gear /></button>\r\n  )\r\n}\r\n\r\nexport default TodoAddToggleExtendButton\r\n","export const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n","import { MONTHS } from '../constants'\r\n\r\nexport const getFormattedDate = (myDate) => {\r\n  myDate = new Date('' + myDate)\r\n\r\n  const date = myDate.getDate()\r\n  const month = MONTHS[myDate.getMonth()]\r\n  const hours = myDate.getHours()\r\n  const minutes = myDate.getMinutes()\r\n\r\n  return `${date} ${month} ${hours}:${minutes}`\r\n}\r\n\r\nexport const isValidDate = (myDate) => myDate && '' + myDate !== 'Invalid Date'\r\n\r\nexport const capitalize = (str) => str.split(' ').map(word => word.split('').map((char, index) => index === 0 ? char.toUpperCase() : char).join('')).join(' ')\r\n","import React from 'react'\r\nimport './TodoAddInput.scss'\r\n\r\nimport { \r\n  capitalize \r\n} from '../../utils'\r\n\r\nconst TodoAddInput = ({ name, value, updateFormValue }) => {\r\n  const handleChange = ({ target: { name, value} }) => {\r\n    updateFormValue(name, value)\r\n  }\r\n\r\n  switch (name) {\r\n    case 'importance':\r\n      return (\r\n        <select \r\n          className=\"todo-add-input todo-add-input--select\"\r\n          name={name}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"important\">important</option>\r\n          <option value=\"regular\">regular</option>\r\n          <option value=\"not important\">not important</option>\r\n        </select>\r\n      )\r\n    default:\r\n      return (   \r\n        <input \r\n          className={'todo-add-input' + (name === 'dateExpires' ? ' todo-add-input--time' : '')}\r\n          required={name === 'title'}\r\n          type={name === 'dateExpires' ? 'datetime-local' : 'text'}\r\n          placeholder={capitalize(name)}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoAddInput\r\n","import { ADD_ITEM, DELETE_ITEM, DISPLAY_ITEMS_BY_IMPORTANCE, DETECT_ITEMS_FAILURE, SET_ITEM_PROP } from './types'\r\n\r\nexport const addItem = (todo) => dispatch => {\r\n  dispatch({\r\n    type: ADD_ITEM,\r\n    payload: {\r\n      todo\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteItem = (id) => dispatch => {\r\n  dispatch({\r\n    type: DELETE_ITEM,\r\n    payload: {\r\n      id\r\n    }\r\n  })\r\n}\r\n\r\nexport const displayItemsByImportance = (value) => dispatch => {\r\n  dispatch({\r\n    type: DISPLAY_ITEMS_BY_IMPORTANCE,\r\n    payload: {\r\n      value\r\n    }\r\n  })\r\n}\r\n\r\nexport const detectItemsFailure = () => dispatch => {\r\n  dispatch({\r\n    type: DETECT_ITEMS_FAILURE\r\n  })\r\n}\r\n\r\nexport const setItemProp = (id, key, value) => dispatch => {\r\n  dispatch({\r\n    type: SET_ITEM_PROP,\r\n    payload: {\r\n      id,\r\n      key,\r\n      value\r\n    }\r\n  })\r\n}\r\n","export const UPDATE_FORM_VALUE = 'UPDATE_FORM_VALUE'\r\nexport const TOGGLE_EXTEND_FORM = 'TOGGLE_EXTEND_FORM'\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\nexport const DETECT_ITEMS_FAILURE = 'DETECT_ITEMS_FAILURE'\r\nexport const DISPLAY_ITEMS_BY_IMPORTANCE = 'DISPLAY_ITEMS_BY_IMPORTANCE'\r\nexport const UPDATE_FILTER_FORM_VALUE = 'UPDATE_FILTER_FORM_VALUE'\r\nexport const SET_ITEM_PROP = 'SET_ITEM_PROP'\r\n","import { UPDATE_FILTER_FORM_VALUE } from './types'\r\n\r\nexport const updateFilterFormValue = (value) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_FILTER_FORM_VALUE,\r\n    payload: {\r\n      value\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './TodoAddForm.scss'\r\n\r\nimport TodoAddToggleExtendButton from '../TodoAddToggleExtendButton/TodoAddToggleExtendButton'\r\nimport TodoAddInput from '../TodoAddInput/TodoAddInput'\r\n\r\nimport { \r\n  updateFormValue, \r\n  toggleExtendForm \r\n} from '../../actions/todoAddFormActions'\r\nimport { \r\n  addItem, \r\n  displayItemsByImportance \r\n} from '../../actions/todosActions'\r\nimport { \r\n  updateFilterFormValue \r\n} from '../../actions/todoFilterFormActions'\r\n\r\n\r\nconst TodoAddForm = ({ title, description, importance, dateExpires, updateFormValue, updateFilterFormValue, displayItemsByImportance, isExtended, toggleExtendForm, addItem }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    addItem({\r\n      id: Math.random(),\r\n      title,\r\n      description,\r\n      importance,\r\n      dateAdded: new Date(),\r\n      dateExpires: new Date(Date.parse(dateExpires)),\r\n      status: 'active',\r\n      isHidden: false\r\n    })\r\n\r\n    updateFormValue('title', '')\r\n    updateFormValue('description', '')\r\n    updateFormValue('dateExpires', '')\r\n\r\n    updateFilterFormValue('all')\r\n    displayItemsByImportance('all')\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-add-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <TodoAddToggleExtendButton isExtended={isExtended} toggleExtendForm={toggleExtendForm} />\r\n      <TodoAddInput name=\"title\" value={title} updateFormValue={updateFormValue} />\r\n      {isExtended && <TodoAddInput name=\"description\" value={description} updateFormValue={updateFormValue} />}\r\n      {isExtended && <TodoAddInput name=\"importance\" updateFormValue={updateFormValue} />}\r\n      {isExtended && <TodoAddInput name=\"dateExpires\" value={dateExpires} updateFormValue={updateFormValue} />}\r\n      <button className=\"todo-add-form__button\">+</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ todoAddForm: { title, description, importance, dateExpires, isExtended } }) => ({\r\n  title,\r\n  description,\r\n  importance,\r\n  dateExpires,\r\n  isExtended\r\n})\r\n\r\nconst actions = {\r\n  updateFormValue,\r\n  updateFilterFormValue,\r\n  displayItemsByImportance,\r\n  toggleExtendForm,\r\n  addItem\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(TodoAddForm)\r\n","import { UPDATE_FORM_VALUE, TOGGLE_EXTEND_FORM } from \"./types\";\r\n\r\nexport const updateFormValue = (name, value) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_FORM_VALUE,\r\n    payload: {\r\n      name,\r\n      value\r\n    }\r\n  })\r\n}\r\n\r\nexport const toggleExtendForm = () => dispatch => {\r\n  dispatch({\r\n    type: TOGGLE_EXTEND_FORM\r\n  })\r\n}\r\n","import React from 'react'\r\nimport './TodoItem.scss'\r\n\r\nimport { \r\n  getFormattedDate, \r\n  isValidDate \r\n} from '../../utils'\r\n\r\nconst TodoItem = ({ todo: { id, title, description, dateAdded, dateExpires, dateCompleted, status, isHidden }, deleteItem,  setItemProp }) => {\r\n  const extraClassName = isHidden ? ' todo-item--hidden' : status === 'completed' ? ' todo-item--completed' : status === 'failed' ? ' todo-item--failed' : ''\r\n  \r\n  const handleToggleButtonClick = () => {\r\n    if (status === 'completed') {\r\n      setItemProp(id, 'dateCompleted', null)\r\n    } else {\r\n      setItemProp(id, 'dateCompleted', new Date())\r\n    }\r\n    setItemProp(id, 'status', status === 'active' ? 'completed' : status === 'completed' ? 'active' : 'completed')\r\n  }\r\n  \r\n  return (\r\n    <li className={'todo-item' + extraClassName}>\r\n      <button\r\n        className=\"todo-item__button todo-item__button--toggle\" \r\n        onClick={handleToggleButtonClick}\r\n      >&#10004;</button>\r\n      <div className=\"todo-item__text\">\r\n        <input \r\n          className=\"todo-item__title\"\r\n          autoComplete=\"off\"\r\n          type=\"text\" \r\n          name=\"title\" \r\n          value={title} \r\n          onChange={({ target: { name, value }}) => setItemProp(id, name, value)} \r\n          />\r\n        {description && \r\n          <input \r\n            className=\"todo-item__description\"\r\n            autoComplete=\"off\"\r\n            type=\"text\" \r\n            name=\"description\" \r\n            value={description} \r\n            onChange={({ target: { name, value }}) => setItemProp(id, name, value)} \r\n          />\r\n        }\r\n      </div>\r\n      <ul className=\"todo-item__dates\">\r\n        <li className=\"todo-item__date\">Added: {getFormattedDate(dateAdded)}</li>\r\n        {isValidDate(dateExpires) && <li className=\"todo-item__date\">Expires: {getFormattedDate(dateExpires)}</li>}\r\n        {dateCompleted && <li className=\"todo-item__date\">Completed: {getFormattedDate(dateCompleted)}</li>}\r\n      </ul>\r\n      <button\r\n        className=\"todo-item__button todo-item__button--delete\" \r\n        onClick={() => deleteItem(id)\r\n      }>&times;</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './TodoList.scss'\r\n\r\nimport TodoItem from '../TodoItem/TodoItem'\r\n\r\nimport {\r\n  deleteItem,\r\n  detectItemsFailure,\r\n  setItemProp\r\n} from '../../actions/todosActions'\r\n\r\nconst TodoList = ({ todos, deleteItem, detectItemsFailure, setItemProp }) => {\r\n  useEffect(() => {\r\n    detectItemsFailure()\r\n    const interval = setInterval(() => {\r\n      detectItemsFailure()\r\n    }, 1500)\r\n    return () => clearInterval(interval)\r\n  }, [detectItemsFailure])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const items = todos.map((todo, index) => (\r\n    <TodoItem \r\n      key={index} \r\n      todo={todo}\r\n      deleteItem={deleteItem} \r\n      detectItemsFailure={detectItemsFailure}\r\n      setItemProp={setItemProp}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {items}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ todos }) => ({\r\n  todos\r\n})\r\n\r\nconst actions = {\r\n  deleteItem,\r\n  detectItemsFailure,\r\n  setItemProp\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(TodoList)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './TodoFilterForm.scss'\r\n\r\nimport { \r\n  displayItemsByImportance \r\n} from '../../actions/todosActions'\r\nimport { \r\n  updateFilterFormValue \r\n} from '../../actions/todoFilterFormActions'\r\n\r\nconst TodoFilterForm = ({ value, updateFilterFormValue, displayItemsByImportance }) => {\r\n  useEffect(() => {\r\n    displayItemsByImportance(value)\r\n  }, [displayItemsByImportance, value])\r\n\r\n  const handleChange = ({ target: { value}}) => {\r\n    updateFilterFormValue(value)\r\n    displayItemsByImportance(value)\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-filter-form\">\r\n      <h4 className=\"todo-filter-form__title\">Show</h4>\r\n      <select\r\n        className=\"todo-filter-form__select\" \r\n        value={value} \r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"all\">all</option>\r\n        <option value=\"important\">important</option>\r\n        <option value=\"regular\">regular</option>\r\n        <option value=\"not important\">not important</option>\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ todoFilterForm: { value } }) => ({\r\n  value\r\n})\r\n\r\nconst actions = {\r\n  displayItemsByImportance,\r\n  updateFilterFormValue\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(TodoFilterForm)\r\n","import React from 'react'\r\nimport './Todo.scss'\r\n\r\nimport TodoAddForm from '../TodoAddForm/TodoAddForm'\r\nimport TodoList from '../TodoList/TodoList'\r\nimport TodoFilterForm from '../TodoFilterForm/TodoFilterForm'\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"todo\">\r\n      <TodoAddForm />\r\n      <TodoList />\r\n      <TodoFilterForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\nimport Todo from '../Todo/Todo'\nimport './App.scss'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Todo />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_ITEM, DELETE_ITEM, DISPLAY_ITEMS_BY_IMPORTANCE, DETECT_ITEMS_FAILURE, SET_ITEM_PROP,  } from '../actions/types'\r\nimport { isValidDate } from '../utils'\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('todos')) || []\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n  const { type } = action\r\n  const { todo, id, key, value } = action.payload ? action.payload : action\r\n\r\n  switch (type) {\r\n    case ADD_ITEM:\r\n      return [\r\n        ...state,\r\n        todo\r\n      ]\r\n    case DELETE_ITEM:\r\n      return state.filter(item => item.id !== id)\r\n    case DISPLAY_ITEMS_BY_IMPORTANCE:\r\n      return value === 'all' ? state.map(item => ({...item, isHidden: false})) : state.map(item => item.importance === value ? {...item, isHidden: false} : {...item, isHidden: true})\r\n    case DETECT_ITEMS_FAILURE:\r\n      return state.map(item => item.status === 'active' && isValidDate(item.dateExpires) && new Date(item.dateExpires).getTime() <= new Date(item.dateAdded).getTime() ? {...item, status: 'failed'} : item)\r\n    case SET_ITEM_PROP:\r\n      return state.map(item => item.id === id ? {...item, [key]: value} : item)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todosReducer\r\n","import { UPDATE_FORM_VALUE, TOGGLE_EXTEND_FORM } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  title: '',\r\n  description: '',\r\n  importance: 'important',\r\n  dateAdded: '',\r\n  dateExpires: '',\r\n  isExtended: false\r\n}\r\n\r\nconst TodoAddFormReducer = (state = initialState, action) => {\r\n  const { type } = action\r\n  const { name, value } = action.payload ? action.payload : action\r\n\r\n  switch (type) {\r\n    case UPDATE_FORM_VALUE:\r\n      return {\r\n        ...state,\r\n        [name]: value\r\n      }\r\n    case TOGGLE_EXTEND_FORM:\r\n      return {\r\n        ...state,\r\n        isExtended: !state.isExtended \r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default TodoAddFormReducer\r\n","import { UPDATE_FILTER_FORM_VALUE } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  value: 'all'\r\n}\r\n\r\nconst todoFilterFormReducer = (state = initialState, action) => {\r\n  const { type } = action\r\n  const { value } = action.payload ? action.payload : action\r\n\r\n  switch (type) {\r\n    case UPDATE_FILTER_FORM_VALUE:\r\n      return {\r\n        ...state,\r\n        value: value\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoFilterFormReducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport todosReducer from './todosReducer'\r\nimport todoAddFormReducer from './todoAddFormReducer'\r\nimport todoFilterFormReducer from './todoFilterFormReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n  todoAddForm: todoAddFormReducer,\r\n  todoFilterForm: todoFilterFormReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import thunk from \"redux-thunk\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n  // compose(\r\n  //   applyMiddleware(...middleware),\r\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  // )\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}